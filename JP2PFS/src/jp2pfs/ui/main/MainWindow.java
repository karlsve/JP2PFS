/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package jp2pfs.ui.main;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.*;
import jp2pfs.peering.Manager;
import jp2pfs.peering.client.Client;
import jp2pfs.peering.client.ClientListener;
import jp2pfs.peering.client.ClientMessage;
import jp2pfs.peering.server.Server;
import jp2pfs.peering.server.ServerListener;
import jp2pfs.peering.server.ServerMessage;

/**
 *
 * @author karlinsv
 */
public class MainWindow extends javax.swing.JFrame {

    private Manager manager = null;
    
    private FileTreeModel treeModel = null;

    /**
     * Creates new form MainWindow
     */
    public MainWindow(Manager manager) {
        initComponents();
        init(manager);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        userListScrollPane = new javax.swing.JScrollPane();
        userList = new javax.swing.JList();
        mainWindowTabPane = new javax.swing.JTabbedPane();
        mainWindowHomePanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        fileTree = new FileTree();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("MainWindow"); // NOI18N
        setResizable(false);

        jSplitPane1.setDividerLocation(110);

        userListScrollPane.setName("Userlist"); // NOI18N

        userList.setModel(new DefaultListModel<UserItem>());
        userListScrollPane.setViewportView(userList);

        jSplitPane1.setLeftComponent(userListScrollPane);

        fileTree.setModel(new FileTreeModel());
        jScrollPane1.setViewportView(fileTree);

        javax.swing.GroupLayout mainWindowHomePanelLayout = new javax.swing.GroupLayout(mainWindowHomePanel);
        mainWindowHomePanel.setLayout(mainWindowHomePanelLayout);
        mainWindowHomePanelLayout.setHorizontalGroup(
            mainWindowHomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 483, Short.MAX_VALUE)
        );
        mainWindowHomePanelLayout.setVerticalGroup(
            mainWindowHomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 425, Short.MAX_VALUE)
        );

        mainWindowTabPane.addTab("Home", mainWindowHomePanel);

        jSplitPane1.setRightComponent(mainWindowTabPane);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 604, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTree fileTree;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JPanel mainWindowHomePanel;
    private javax.swing.JTabbedPane mainWindowTabPane;
    private javax.swing.JList userList;
    private javax.swing.JScrollPane userListScrollPane;
    // End of variables declaration//GEN-END:variables

    private void init(Manager manager) {
        initTabPane();
        ((FileTree) fileTree).initHome();
        this.setVisible(true);
        this.manager = manager;
    }

    private void initTabPane() {
        mainWindowTabPane.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(final MouseEvent e) {
                if (SwingUtilities.isRightMouseButton(e)) {
                    int index = mainWindowTabPane.getSelectedIndex();
                    if (index != 0) {
                        mainWindowTabPane.setSelectedIndex(0);
                        mainWindowTabPane.removeTabAt(index);
                    }
                }
            }
        });
    }
}
