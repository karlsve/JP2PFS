/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package jp2pfs.MainWindowComponents;

import jp2pfs.client.PTPClient;
import jp2pfs.client.PTPClientListener;
import jp2pfs.client.PTPClientMessage;
import jp2pfs.server.PTPServer;
import jp2pfs.server.PTPServerListener;
import jp2pfs.server.PTPServerMessage;

/**
 *
 * @author karlinsv
 */
public class UserPanel extends javax.swing.JPanel {

    private UserItem user = null;
    
    PTPClientListener clientListener = new PTPClientListener() {

        @Override
        public void onMessage(PTPClientMessage message) {
            doOnClientMessage(message);
        }
    };
    
    /**
     * Creates new form UserPanel
     */
    public UserPanel(UserItem user) {
        this.user = user;
        initComponents();
    }
    
    public PTPClientListener getListener() {
        return this.clientListener;
    }

    private void doOnClientMessage(PTPClientMessage message) {
        if(message.getSender() instanceof PTPClient) {
            PTPClient client = (PTPClient) message.getSender();
            switch(message.getMessageCode()) {
                case CONNECTION_SUCCESS:
                    
                    break;
                case MESSAGE_SEND_SUCCESS:
                    UserChatTextArea.append("Du: "+message.getMessage()+"\n");
                    break;
                case MESSAGE_SEND_ERROR:
                    System.out.println(message.getMessage());
                    break;
                case MESSAGE_RECEIVE_SUCCESS:
                    System.out.println("Message received.");
                    UserChatTextArea.append(user.username+": "+message.getMessage()+"\n");
                    break;
                case MESSAGE_RECEIVE_ERROR:
                    System.out.println(message.getMessage());
                    break;
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        UserTreeView = new javax.swing.JTree();
        jScrollPane2 = new javax.swing.JScrollPane();
        UserChatTextArea = new javax.swing.JTextArea();
        UserChatInput = new javax.swing.JTextField();
        UserChatSend = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(527, 350));

        jScrollPane1.setViewportView(UserTreeView);

        UserChatTextArea.setColumns(20);
        UserChatTextArea.setRows(5);
        jScrollPane2.setViewportView(UserChatTextArea);

        UserChatSend.setText("Senden");
        UserChatSend.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UserChatSendMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 507, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(UserChatInput)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(UserChatSend)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(UserChatSend, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(UserChatInput))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void UserChatSendMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UserChatSendMouseClicked
        PTPClient client = new PTPClient(user.port, user.ip, "karlsve", "");
        client.addListener(clientListener);
        client.sendMessageClient(UserChatInput.getText());
        UserChatInput.setText("");
    }//GEN-LAST:event_UserChatSendMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField UserChatInput;
    private javax.swing.JButton UserChatSend;
    private javax.swing.JTextArea UserChatTextArea;
    private javax.swing.JTree UserTreeView;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
